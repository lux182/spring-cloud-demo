server:
  port: 8761 # 注册中心占用8761端口

---

spring:
  application:
    name: eureka-server
  cloud:
    config:
      uri:  http://localhost:8888
---

eureka:
  instance:
    hostname: localhost
#    显示 ip 配置
    preferIpAddress: true
#    可以通过eureka.instance.metadataMap修改元数据，这些元数据不会改变客户端的行为。
#    使用这个配置，多个服务实例可以配置在一个主机上，random.value确保了实例ID的唯一性。当然需要实例的端口不一样。
    metadataMap:
          instanceId: ${spring.application.name}:${random.value}

  client:
    registerWithEureka: false
    fetchRegistry: false
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/  #其实就是 http://localhost:8761/eureka/
    transport:
      retryableClientQuarantineRefreshPercentage: 1 #提升服务注册准确率

#(1) Eureka Server端：配置关闭自我保护，并按需配置Eureka Server清理无效节点的时间间隔。
#eureka.server.enable-self-preservation			# 设为false，关闭自我保护
#eureka.server.eviction-interval-timer-in-ms     # 清理间隔（单位毫秒，默认是60*1000）
#(2) Eureka Client端：配置开启健康检查，并按需配置续约更新时间和到期时间。
#eureka.client.healthcheck.enabled			# 开启健康检查（需要spring-boot-starter-actuator依赖）
#eureka.instance.lease-renewal-interval-in-seconds		# 续约更新时间间隔（默认30秒）
#eureka.instance.lease-expiration-duration-in-seconds 	# 续约到期时间（默认90秒）

